plugins {
    id 'com.google.protobuf' version '0.8.13'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

ext {
    set('grpcVersion', '1.32.1')
}

group = 'dsm.service'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.github.lognet:grpc-spring-boot-starter:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'io.jaegertracing:jaeger-client:1.4.0'
    implementation 'com.orbitz.consul:consul-client:1.4.0'
    implementation 'mysql:mysql-connector-java:8.0.21'
    implementation 'org.projectlombok:lombok'
    implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
    compile('org.modelmapper:modelmapper:1.1.0')


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java{
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}